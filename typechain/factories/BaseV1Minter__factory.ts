/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseV1Minter, BaseV1MinterInterface } from "../BaseV1Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "__voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "__ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "__ve_dist",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_emission",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "contract underlying",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve",
    outputs: [
      {
        internalType: "contract ve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve_dist",
    outputs: [
      {
        internalType: "contract ve_dist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_voter",
    outputs: [
      {
        internalType: "contract voter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "active_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculate_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minted",
        type: "uint256",
      },
    ],
    name: "calculate_growth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "claimants",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "update_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526a108b2a2c280290940000006000553480156200002157600080fd5b506040516200128438038062001284833981016040819052620000449162000141565b600280546001600160a01b0319163317905560408051637e062a3560e11b815290516001600160a01b0384169163fc0c546a9160048083019260209291908290030181865afa1580156200009c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c291906200018b565b6001600160a01b0390811660805283811660a05282811660c052811660e05262093a8080620000f3816002620001c6565b620000ff9042620001e8565b6200010b919062000203565b620001179190620001c6565b6001555062000226915050565b80516001600160a01b03811681146200013c57600080fd5b919050565b6000806000606084860312156200015757600080fd5b620001628462000124565b9250620001726020850162000124565b9150620001826040850162000124565b90509250925092565b6000602082840312156200019e57600080fd5b620001a98262000124565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620001e357620001e3620001b0565b500290565b60008219821115620001fe57620001fe620001b0565b500190565b6000826200022157634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e051610fa7620002dd6000396000818160fd0152818161096a01528181610a110152610a840152600081816101800152818161038201528181610430015281816105e7015261069f01526000818161014401528181610b3c0152610bd60152600081816101d30152818161022901528181610309015281816103b2015281816105640152818161072101528181610845015281816108c4015281816109990152610b0d0152610fa76000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638dd598fb1161008c578063d139960811610066578063d1399608146101bd578063e038c75a146101c6578063ecd0c0c3146101ce578063ed29fc11146101f557600080fd5b80638dd598fb1461017b5780638e01fbfa146101a2578063cfc6c8ff146101b557600080fd5b80631eebae80146100d457806326cfc17b146100ef5780632c6b2f0c146100f857806336d96faf146101375780633db9b42a1461013f5780638517081314610166575b600080fd5b6100dc6101fd565b6040519081526020015b60405180910390f35b6100dc60005481565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e6565b6100dc610225565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b610179610174366004610d8e565b6102d6565b005b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6100dc6101b0366004610e66565b610560565b6100dc610681565b6100dc60015481565b6100dc61069b565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6100dc6107ab565b60006103e8600261020c61069b565b6102169190610e95565b6102209190610eb4565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610ed6565b60646102b361069b565b60626000546102c29190610e95565b6102cc9190610e95565b6102169190610eb4565b6002546001600160a01b031633146102ed57600080fd5b6040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561035557600080fd5b505af1158015610369573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190610eef565b5060005b8351811015610524577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4e54c3b84838151811061046f5761046f610f11565b602002602001015163077f880087858151811061048e5761048e610f11565b60200260200101516040518463ffffffff1660e01b81526004016104ce9392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610ed6565b508061051c81610f27565b915050610425565b50600280546001600160a01b031916905562093a80806105448142610f42565b61054e9190610eb4565b6105589190610e95565b600155505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190610ed6565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106679190610ed6565b6106719190610e95565b61067b9190610eb4565b92915050565b600061022061068e610225565b6106966101fd565b610c9f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190610ed6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610ed6565b6102209190610f5a565b6001546000906107be62093a8082610f42565b42101580156107d657506002546001600160a01b0316155b15610c9a5762093a806107e98142610eb4565b6107f39190610e95565b60018190559050610802610681565b60008181559061081190610560565b905060008054826108229190610f42565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b09190610ed6565b905081811015610953576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f19306108f48486610f5a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b505050505b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a069190610eef565b610a0f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663811a40fe6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b21ed5026040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b505060005460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b39250610b78917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190610eef565b50600054604051633c6b16ab60e01b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c6b16ab90602401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b50505050336001600160a01b03167fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb600054610c7061069b565b610c786101fd565b6040805193845260208401929092529082015260600160405180910390a25050505b919050565b600081831015610caf5781610cb1565b825b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610cf757610cf7610cb8565b604052919050565b600067ffffffffffffffff821115610d1957610d19610cb8565b5060051b60200190565b600082601f830112610d3457600080fd5b81356020610d49610d4483610cff565b610cce565b82815260059290921b84018101918181019086841115610d6857600080fd5b8286015b84811015610d835780358352918301918301610d6c565b509695505050505050565b600080600060608486031215610da357600080fd5b833567ffffffffffffffff80821115610dbb57600080fd5b818601915086601f830112610dcf57600080fd5b81356020610ddf610d4483610cff565b82815260059290921b8401810191818101908a841115610dfe57600080fd5b948201945b83861015610e325785356001600160a01b0381168114610e235760008081fd5b82529482019490820190610e03565b97505087013592505080821115610e4857600080fd5b50610e5586828701610d23565b925050604084013590509250925092565b600060208284031215610e7857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610eaf57610eaf610e7f565b500290565b600082610ed157634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ee857600080fd5b5051919050565b600060208284031215610f0157600080fd5b81518015158114610cb157600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f3b57610f3b610e7f565b5060010190565b60008219821115610f5557610f55610e7f565b500190565b600082821015610f6c57610f6c610e7f565b50039056fea264697066735822122060a71bea80739d88229fa5931bba27a5f97ef38975cf0d487d9da28b8ecde00264736f6c634300080b0033";

export class BaseV1Minter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    __voter: string,
    __ve: string,
    __ve_dist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseV1Minter> {
    return super.deploy(
      __voter,
      __ve,
      __ve_dist,
      overrides || {}
    ) as Promise<BaseV1Minter>;
  }
  getDeployTransaction(
    __voter: string,
    __ve: string,
    __ve_dist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __voter,
      __ve,
      __ve_dist,
      overrides || {}
    );
  }
  attach(address: string): BaseV1Minter {
    return super.attach(address) as BaseV1Minter;
  }
  connect(signer: Signer): BaseV1Minter__factory {
    return super.connect(signer) as BaseV1Minter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseV1MinterInterface {
    return new utils.Interface(_abi) as BaseV1MinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseV1Minter {
    return new Contract(address, _abi, signerOrProvider) as BaseV1Minter;
  }
}
